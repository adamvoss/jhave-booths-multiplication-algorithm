<?xml version="1.0" encoding="UTF-8"?>
<pseudocode>
  <code>
    <signature>Booth's Multiplication Algorithm</signature>
    <line num="01" indent="0">boothMultiply(multiplicand, multiplier){</line>
    <line num="02" indent="1">Register M=multiplicand</line>
    <line num="03" indent="1">Register A=0</line>
    <line num="04" indent="1">Register Q=multiplier</line>
    <line num="05" indent="1">Bit Beta=0</line>
    <line num="06" indent="1">Integer count=REGISTER_SIZE</line>
    <line num="07" indent="1"></line>
    <line num="08" indent="1">while (count > 0) {</line>
    <line num="09" indent="2"></line>
    <line num="10" indent="2">switch ([leastSignificantBit(Q),Beta]) {</line>
    <line num="11" indent="3">case [1,0]: A=A-M</line>
    <line num="12" indent="4">break</line>
    <line num="13" indent="3"></line>
    <line num="14" indent="3">case[0,1]: A=A+M</line>
    <line num="15" indent="4">break</line>
    <line num="16" indent="2">}</line>
    <line num="17" indent="2"></line>
    <line num="18" indent="2">//Shift A, Q, and Beta 1 bit</line>
    <line num="19" indent="2">signPreservingRightShift(1, A, Q, Beta)</line>
    <line num="20" indent="2"></line>
    <line num="21" indent="2">count--</line>
    <line num="22" indent="1">}</line>
    <line num="23" indent="0">}</line>
  </code>
</pseudocode>
